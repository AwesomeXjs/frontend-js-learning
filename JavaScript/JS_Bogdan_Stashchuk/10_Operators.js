/* Операторы - это встроенная в JS функция */

/* Операторы:
1.Арифметические: + - * / 
2.Сравнения: === !== <= >=
3.Логические: ! && || 
4.Присваивания: = 
5.Текстовые: typeof instanceof new delete  */

let a, b
a = 10
b = a
let c = a + b
console.log(c)

a = 10 // a и 10 - это операнды

/* Унарные и бинарные операторы */
/* у унарных операторов всегда один операнд */
a++
delete obj.a
typeof a
new Object()

/* у бинарных операторо всегда два операнда */
a = 5
a + b
a += b
a === b
a && b

/* Форматы записи операторов */
/* Инфиксная запись: */
a = true
a > b
a || b
a + b
a - 3
/* Префиксная запись: */
++a
delete obj.a
typeof a
/* Постфиксная запись: */
a++
myFunction()

/* Приоритетность операторов: */
/* Умножение и деление приоритетней сложения и вычитания */
/* для смены приоритетности можно использовать скобки */

/* Логические операторы:
! - НЕ (всегда возвращает значение типа boolean)
&& - И 
|| - ИЛИ (возвращают значение одного и операндов) */

/* Ложные значения: 
это любые значения которые возвращают boolean
false, 0 , '' , undefined, null */

typeof 10 === 'number' // true
typeof 'Dima' === 'string' // true

/* REST оператор берет аргументы при вызове функции и собирает их в массив */
const myFnx = (...a) => {
	console.log(a)
}
myFnx(1, 3, 5, 6) // [1,3,5,6]

/* REST - собирает все аргументы в массив, а SPREAD разделяет все элементы массива на элементы , в итоге мы получаем все элементы массивов собранные в один внутри аргумента функции */
const meanScore = (...a) => {
	if (a.some(e => typeof e !== 'number')) {
		return `Все аргументы в вызове функции должны быть числами!`
	}
	const result = a.reduce((sum, num) => sum + num, 0)
	return (result / a.length).toFixed(2)
}
console.log(meanScore(...scores1))
// 1.93

console.log(meanScore(...scores1, ...scores2))
// 2.8

console.log(meanScore(...scores1, ...scores2, ...scores3))
// 2.59

console.log(meanScore(...scores4))
// Все аргументы в вызове функции должны быть числами!
