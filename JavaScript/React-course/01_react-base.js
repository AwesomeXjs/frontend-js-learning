/* Реакт - библиотека для создания пользовательских интерфейсов */
/* Одностраничные приложения (Single Page Application) -  клиент запрашивает только одну страничку HTML и весь JS/CSS код. После того как клиент отправляет какой то запрос на сервер - запрашиваются только необходимые данные, а все остальное перерисовывается на стороне клиента*/

/* SPA преимущества: 
1. Веб страница не перезагружается
2. Моментальная перерисовка элементов
3. Легче разворачивать , потому что SPA содержит только несколько статических файлов 
4. Эффективное использование пропускной способности
*/

/* SPA недостатки:
1.Для поисковой оптимизации (SEO) нужно выполнить дополнительную настройку сервера для корректного сканирования ботами, такими как Googlebot
2. Большой размер файла JS влияет на время начальной загрузки SPA
*/

/* Основы REACT */
/* Обновление DOM (Document Object Model) - очень затратная операция, поэтому при использовании react нет необходимости перерисовывать весь DOM. При изменении в SPA - react перерисовывает сначало виртуальный DOM , после этого виртуальный сравнивается с реальным и перерисовываются только те элементы которые изменились, а не весь DOM */

/* 
Ключевые понятия React: 
1. Components (Компоненты) - "строительные блоки" в любом SPA
2. JSX (JavaScript Syntax Extension ) - синтаксис ПОХОЖИЙ на html и css
3. props (свойства) - передаются от родителя к дочернему компоненту
4. state (состояние) - динамическое поведение компонента
5. React hooks - позволяют управлять состоянием в функциональных компонентах 
основные хуки: useState , useEffect
 */
